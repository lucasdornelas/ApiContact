buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath('org.flywaydb:flyway-gradle-plugin:3.1')
	}
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'flyway'

group = 'com.contato'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('com.google.zxing:core:3.3.3')

	compile('org.codehaus.groovy:groovy-all:2.4.9')
	compile('org.projectlombok:lombok:1.16.14')
	compile('org.json:json:20160810')

	compile('org.postgresql:postgresql:42.0.0')
	compile('commons-dbcp:commons-dbcp:1.4')
	compile('com.h2database:h2:1.4.196')

	testCompile('org.assertj:assertj-core:3.8.0')
	testCompile('org.spockframework:spock-spring:1.1-groovy-2.4-rc-3')
	testCompile('org.spockframework:spock-core:1.1-groovy-2.4-rc-3')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


task buildDocker(type: Docker, dependsOn: build) {
	tag = 'registry.heroku.com/api-contact/web'
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/target"
		}
	}
}

task dockerRun(type: Exec, dependsOn: buildDocker) {
	commandLine 'docker-compose', 'up', '--force-recreate'
}

flyway {
	driver = 'org.postgresql.Driver'
	url = 'jdbc:postgresql://localhost:5432/apicontact'
	schemas = ['api_contact_schema']
	user = 'postgres'
	password = 'postgres@123'
}